
import telebot
from telebot import types
from random import choice

test = {}
timing_list = []

bot = telebot.TeleBot('6810023456:AAHXdwiFBBJHVL5OqQPzgmyQ8Yf9ZHTmdno')

@bot.message_handler(commands=['start'])
def hi(message):
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton('Press to start / Нажми для старта', callback_data='press_button')
    markup.add(btn1)
    bot.send_message(message.chat.id, f'Hello {message.from_user.first_name}, this is a training program. \nYou need to write English and Russian words, and type stop(стоп) at the end '
                                      f'to start the training'
                                      f'\n'
                                      f'\n'
                                      f'Привет {message.from_user.first_name}, это программа-тренажер. \nТебе нужно записать английские и русские слова, и написать стоп(стоп) в конце, '
                                      f'чтобы начать тренировку', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def clic(call):
    if call.data == 'press_button':
        main_func(call.message)

def main_func(message):
    bot.send_message(message.chat.id, "Everything is working")
    bot.send_message(message.chat.id, 'Напишите слово на английском, а затем перевод. Для начала тренировки напишите стоп(stop) ')

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    global test
    global word1

    word1 = message.text.lower()
    print(word1, '1')
    
    if word1.lower() == 'стоп':
        print('start!')
        timing_list=list(test.keys())
        print('^^^',timing_list)
        global train
        def train():
            global n
            if timing_list:
                n = choice(timing_list)
                bot.send_message(message.chat.id, f'перевод для {n}')
                bot.register_next_step_handler(message, handle_train)
            else:
                bot.send_message(message.chat.id, 'Excellent, training finished!')

        train()
    else:
        bot.register_next_step_handler(message, handle_translation)


def handle_train(message):
    ff = message.text.lower()  # Проверяем, есть ли данное слово в словаре test
    correct_translation = test[n].lower()
    print(correct_translation)
    if ff.lower() == correct_translation:
        bot.send_message(message.chat.id, 'Great!')
        
        return train()
    else:
        bot.send_message(message.chat.id, 'You are wrong, try again.')
        return train()   
            
        
    

def handle_translation(message):
    global test
    global word1

    word2 = message.text.lower()
    print(word2, '2')
    
    test[word2] = word1
    print(test)

bot.infinity_polling()
